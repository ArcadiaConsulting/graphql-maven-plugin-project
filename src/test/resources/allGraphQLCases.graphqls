schema {
	#A comment on the query
    query: MyQueryType
    mutation: AnotherMutationType
    subscription: TheSubscriptionType
}

type MyQueryType {
	withoutParameters: [Character]!
    withOneOptionalParam(character: Character): Character
    withOneMandatoryParam(character: Character!): Character
    withOneMandatoryParamDefaultValue(character: Character! = "no one"): Character!
    withTwoMandatoryParamDefaultVal(theHero: Droid! = "A droid", index: int = "Not a number, but ok !!"): Droid!
    #withEnum(episode: Episode!): Character
}


enum Episode {
    NEWHOPE
    EMPIRE
    JEDI
}

interface Character {
    id: ID!
    name: String!
    friends: [Character]
    appearsIn: [Episode]!
}

type allFieldCases {
    id: ID!
    name: String!
    forname: String
    age: int!
    nbComments: int
    comments: [String]
    booleans: [boolean!]
    aliases: [String]!
    planets: [String!]!
    friends: [Human!]
}

type Human implements Character {
    id: ID!
    name: String!
    friends: [Character]
    appearsIn: [Episode]!
    homePlanet: String
}

type Droid implements Character {
    id: ID!
    name: String!
    friends: [Character]
    appearsIn: [Episode]!
    primaryFunction: String
}

