package org.graphql.maven.plugin.samples.server.generated;

import java.util.List;

import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.OneToOne;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * @author generated by graphql-maven-plugin
 */
@Entity
public class Human {

	@Id
	// @GeneratedValue
	String id;

	String name;

	@JsonDeserialize(as = Human.class)
	@OneToOne
	Human bestFriend;

	@JsonDeserialize(contentAs = Human.class)
	@ManyToMany(targetEntity = Human.class)
	List<Human> friends;

	@Enumerated(EnumType.STRING)
	Episode firstEpisode;

	@JsonDeserialize(contentAs = Episode.class)
	// @Enumerated(EnumType.STRING)
	// @ElementCollection(fetch = FetchType.EAGER)
	// @JoinTable(name = "character_appears_in", joinColumns = @JoinColumn(name = "character_id"), inverseJoinColumns =
	// @JoinColumn(name = "episode_id"), uniqueConstraints = {})
	@ElementCollection(targetClass = Episode.class)
	@CollectionTable(name = "character_appears_in", joinColumns = @JoinColumn(name = "character_id"))
	@Enumerated(EnumType.STRING)
	@Column(name = "episode")
	List<Episode> appearsIn;

	String homePlanet;
}
