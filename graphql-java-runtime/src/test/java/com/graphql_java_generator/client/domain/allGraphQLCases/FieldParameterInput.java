package com.graphql_java_generator.client.domain.allGraphQLCases;

import java.util.List;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;

import java.util.Date;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType
public class FieldParameterInput  {

	@GraphQLScalar(graphQLTypeName = "Boolean", javaClass = Boolean.class)
	Boolean uppercase;


	@GraphQLScalar(graphQLTypeName = "Date", javaClass = Date.class)
	Date date;



	public void setUppercase(Boolean uppercase) {
		this.uppercase = uppercase;
	}

	public Boolean getUppercase() {
		return uppercase;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	public Date getDate() {
		return date;
	}

    public String toString() {
        return "FieldParameterInput {"
				+ "uppercase: " + uppercase
				+ ", "
				+ "date: " + date
        		+ "}";
    }
}
